plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'idea'
}

archivesBaseName = "${mod_name}-Fabric-${mc_version}-${mod_version}"

repositories {
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        name = 'terraformers maven'
        url "https://maven.terraformersmc.com/releases"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${mc_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    include(modImplementation("com.jamieswhiteshirt:reach-entity-attributes:2.3.0"))

    modApi("me.shedaniel.cloth:cloth-config-fabric:${clothconfig_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modCompileOnly("com.terraformersmc:modmenu:${modmenu_version}") {
        transitive = false
    }
    modRuntimeOnly("com.terraformersmc:modmenu:${modmenu_version}") {
        transitive = false
    }

    implementation project(":Common")
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }

    mixin {
        defaultRefmapName = "${mod_id}.refmap.json"
    }

    mods {
        inventorytabs {
            sourceSet sourceSets.main
            sourceSet project(":Common").sourceSets.main
        }
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand inputs.properties
    }
}

idea {
    module {
        inheritOutputDirs = false
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}