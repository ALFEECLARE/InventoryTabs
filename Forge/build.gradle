plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

archivesBaseName = "${mod_name}-Forge-${mc_version}-${version}"

minecraft {
    mappings channel: "${mappings_id}", version: "${mappings_version}"
    
    if (project.hasProperty('forge_ats_enabled') && project.findProperty('forge_ats_enabled').toBoolean()) {
        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        project.logger.debug('Forge Access Transformers are enabled for this project.')
    }

    runs {
        configureEach {
            workingDirectory rootProject.file('run')
            ideaModule "${rootProject.name}.${project.name}.main"
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                inventorytabs {
                    source sourceSets.main
                    source project(":Common").sourceSets.main
                }
            }
        }

        client {
            taskName 'Client'
        }

        server {
            taskName 'Server'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly project(":Common")
}

mixin {
    add sourceSets.main, 'inventorytabs.refmap.json'
    config 'inventorytabs.mixins.json'

    debug.verbose = true
    debug.export = true
}

tasks.withType(JavaCompile).configureEach {
    source(project(":Common").sourceSets.main.allSource)
}

processResources {
    from project(":Common").sourceSets.main.resources
}

jar.finalizedBy('reobfJar')