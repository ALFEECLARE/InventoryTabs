buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://maven.parchmentmc.org' }
		maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7.+'
		classpath 'org.parchmentmc:librarian:1.+'
	}
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = "${mod_id}-forge-${mc_version}-${mod_version}"

minecraft {
	mappings channel: "${mappings_id}", version: "${mappings_version}"

	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			mods { inventorytabs { source sourceSets.main } }
		}
		server {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			mods { inventorytabs { source sourceSets.main } }
		}
		data {
			workingDirectory project.file('run')

			property 'forge.logging.markers', 'REGISTRIES'
			property 'forge.logging.console.level', 'debug'

			args '--mod', "${mod_id}", '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

			mods { inventorytabs { source sourceSets.main } }
		}
	}
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

tasks.withType(JavaCompile) {
    source(sourceSets.main.allSource)
}

java {
	withSourcesJar()
}

sourcesJar {
	from(rootProject.file("LICENSE")) {
		rename { "${it}_${mod_id}" }
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"
	
	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

mixin {
    add sourceSets.main, 'inventorytabs.refmap.json'
    config 'inventorytabs.mixins.json'
	
	debug.verbose = true
    debug.export = true
}

jar {
	manifest {
		attributes([
				"Specification-Title"     : "${mod_id}",
				"Specification-Vendor"    : "${author}",
				"Specification-Version"   : "1",
				"Implementation-Title"    : project.name,
				"Implementation-Version"  : "${mod_version}",
				"Implementation-Vendor"   : "${author}",
				"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}

jar.finalizedBy('reobfJar')